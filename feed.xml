<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://cottley.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://cottley.github.io/" rel="alternate" type="text/html" /><updated>2019-03-03T19:16:36-04:00</updated><id>https://cottley.github.io/</id><title type="html">Christopher Ottley</title><subtitle>Efforts and Courage are not enough without Purpose and Direction - John F. Kennedy</subtitle><entry><title type="html">Alexa, daddy stories</title><link href="https://cottley.github.io/Alexa-daddy-stories" rel="alternate" type="text/html" title="Alexa, daddy stories" /><published>2019-03-03T04:00:00-04:00</published><updated>2019-03-03T04:00:00-04:00</updated><id>https://cottley.github.io/Alexa-daddy-stories</id><content type="html" xml:base="https://cottley.github.io/Alexa-daddy-stories">&lt;p&gt;Work (the kind I get paid for) carried me far and away from my family for 5 weeks recently. It was supposed to be maximum 3, but that’s another story. I was especially missing my wife and 3 year old baby girl during this time. The time zone difference (2 hours) was not that much, but had an impact when I had to work late. Sometimes I would miss bedtime and reading my baby girl stories to go to sleep, but more importantly, she would miss me.&lt;/p&gt;

&lt;p&gt;Since I smart-homerized the house, there’s usually a mobile echo dot (or using the alexa app on the phone can do in a pinch) that can be temporarily placed in my baby girl’s room. I hatched upon a plan. I ordered &lt;a href=&quot;https://www.amazon.com/Disney-Princess-Little-Golden-Library/dp/0736435603/ref=sr_1_3?keywords=disney+princess+6+little+golden+books&amp;amp;qid=1551641408&amp;amp;s=gateway&amp;amp;sr=8-3&quot;&gt;6 little golden princess books&lt;/a&gt; from Amazon, delivered to my remote address, recorded them and created a skill that would play back a story at random when asked for “Daddy Stories”. It worked like a charm and helped my baby girl sleep more soundly than ever.&lt;/p&gt;

&lt;p&gt;Step one was getting the recordings and converting them to an MP3 format that the echo dot (or alexa) could play. Using ffmpeg to convert after recording did the trick.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ffmpeg -y -i &amp;lt;input.wav&amp;gt; -ar 16000 -ab 48k -codec:a libmp3lame -ac 1 &amp;lt;output.mp3&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then I placed the MP3s in an Internet accessible location on a https webserver. I could have used &lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;Amazon’s S3&lt;/a&gt; for this, but since this is only for me (technically for my baby girl) and I have a small server running at home so… Why not use it?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/alexa-daddy-stories-figure1.png&quot; alt=&quot;alexa-daddy-stories-figure1&quot; title=&quot;Stories recorded to be played back&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next I created a skill with an invocation name (and skill name) of “Daddy Stories”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/alexa-daddy-stories-figure2.png&quot; alt=&quot;alexa-daddy-stories-figure2&quot; title=&quot;Skill invocation name&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then, I added some intents. The hello world intent is not necessary, I just left it there in case I wanted to test something. Judge not. I configured an intent for the can fulfill intent request, but I’m not sure it’s working…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/alexa-daddy-stories-figure3.png&quot; alt=&quot;alexa-daddy-stories-figure3&quot; title=&quot;Intents&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I still put some sample utterances for the can fulfill intent request though. This is what should allow my baby girl to say “Alexa, daddy stories” instead of “Alexa, open daddy stories”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/alexa-daddy-stories-figure4.png&quot; alt=&quot;alexa-daddy-stories-figure4&quot; title=&quot;Can fulfill intent request utterances&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The key to getting this to work is to make sure I had the AudioPlayer interface enabled. That’s what got me the ability to stream those recorded MP3s and control how they are streamed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/alexa-daddy-stories-figure5.png&quot; alt=&quot;alexa-daddy-stories-figure5&quot; title=&quot;AudioPlayer Interface needs to be enabled&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One thing I have to credit Amazon with is that they provide code samples on how to do lots of stuff. Playing multiple audio streams is no exception and from their github repository I found &lt;a href=&quot;https://github.com/alexa/skill-sample-nodejs-audio-player/tree/mainline/multiple-streams&quot;&gt;a node.js sample of just that&lt;/a&gt;. I didn’t need to follow their deployment instructions, just had a look at the lambda/src directory and the two files constants.js and index.js. Rather than setting up a seperate lambda ARN and execution profile, it turns out Amazon provides a code tab now, letting you edit code easily.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/alexa-daddy-stories-figure6.png&quot; alt=&quot;alexa-daddy-stories-figure6&quot; title=&quot;Code tab&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I modified the structure (and obviously the contents of the constants.js file) to contain information on the story and the URL of the MP3.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;exports.audioData = [
  {
    title: 'Beauty And The Beast',
    url: 'https://this.server.name.is.private/daddystories/audio/Beauty-And-The-Beast.mp3',
  },
  {
    title: 'Brave',
    url: 'https://this.server.name.is.private/daddystories/audio/Brave.mp3',
  },
  {
    title: 'Cinderella',
    url: 'https://this.server.name.is.private/daddystories/audio/Cinderella.mp3',
  },
  {
    title: 'Tangled',
    url: 'https://this.server.name.is.private/daddystories/audio/Tangled.mp3',
  },
  {
    title: 'The Little Mermaid',
    url: 'https://this.server.name.is.private/daddystories/audio/The-Little-Mermaid.mp3',
  },
  {
    title: 'The Princess And The Frog',
    url: 'https://this.server.name.is.private/daddystories/audio/The-Princess-And-The-Frog.mp3',
  },

];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I also modified the index.js file to grab a random entry (instead of playing in order) and play that. I left in the code to play next and previous, but I’m not tracking state or last played as I wanted something simple and quick.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// This sample demonstrates handling intents from an Alexa skill using the Alexa Skills Kit SDK (v2).
// Please visit https://alexa.design/cookbook for additional examples on implementing slots, dialog management,
// session persistence, api calls, and more.
const Alexa = require('ask-sdk-core');
const constants = require('./constants');

function getPlaybackInfo(handlerInput) {
  var attributes = {};
  attributes.url = {};
  
  var audioindex = Math.floor(Math.random()*constants.audioData.length);
  var audiometa = constants.audioData[audioindex];
  var audiourl = audiometa.url;
  var audiotitle = audiometa.title;
  
  var offset = 0;
  
  attributes.url.url = audiourl;
  attributes.url.title = audiotitle;
  attributes.index = audioindex;
  attributes.offsetInMilliseconds = offset;
  
  return attributes;
}



const controller = {
  async play(handlerInput) {
    const {
      attributesManager,
      responseBuilder
    } = handlerInput;

    const playbackInfo = getPlaybackInfo(handlerInput);
    const {
      url,
      offsetInMilliseconds,
      index
    } = playbackInfo;

    const playBehavior = 'REPLACE_ALL';
    const podcast = url;
    const token = url.url;
    playbackInfo.nextStreamEnqueued = false;

    responseBuilder
      .speak(`Here is daddy reading ${podcast.title}`)
      .withShouldEndSession(true)
      .addAudioPlayerPlayDirective(playBehavior, podcast.url, token, offsetInMilliseconds, null);

    return responseBuilder.getResponse();
  },
  stop(handlerInput) {
    return handlerInput.responseBuilder
      .addAudioPlayerStopDirective()
      .getResponse();
  },
  async playNext(handlerInput) {
    const {
      playbackInfo,
      playbackSetting,
    } = await handlerInput.attributesManager.getPersistentAttributes();

    const nextIndex = (playbackInfo.index + 1) % constants.audioData.length;

    if (nextIndex === 0 &amp;amp;&amp;amp; !playbackSetting.loop) {
      return handlerInput.responseBuilder
        .speak('You have reached the end of the playlist')
        .addAudioPlayerStopDirective()
        .getResponse();
    }

    playbackInfo.index = nextIndex;
    playbackInfo.offsetInMilliseconds = 0;
    playbackInfo.playbackIndexChanged = true;

    return this.play(handlerInput);
  },
  async playPrevious(handlerInput) {
    const {
      playbackInfo,
      playbackSetting,
    } = await handlerInput.attributesManager.getPersistentAttributes();

    let previousIndex = playbackInfo.index - 1;

    if (previousIndex === -1) {
      if (playbackSetting.loop) {
        previousIndex += constants.audioData.length;
      } else {
        return handlerInput.responseBuilder
          .speak('You have reached the start of the playlist')
          .addAudioPlayerStopDirective()
          .getResponse();
      }
    }

    playbackInfo.index = previousIndex;
    playbackInfo.offsetInMilliseconds = 0;
    playbackInfo.playbackIndexChanged = true;

    return this.play(handlerInput);
  },
};

const LaunchRequestHandler = {
    canHandle(handlerInput) {
        return handlerInput.requestEnvelope.request.type === 'LaunchRequest';
    },
    handle(handlerInput) {
        return controller.play(handlerInput);    
        /*
        const speechText = 'Welcome, you can say Hello or Help. Which would you like to try?';
        return handlerInput.responseBuilder
            .speak(speechText)
            .reprompt(speechText)
            .getResponse();
        */
    }
};
const HelloWorldIntentHandler = {
    canHandle(handlerInput) {
        return handlerInput.requestEnvelope.request.type === 'IntentRequest'
            &amp;amp;&amp;amp; handlerInput.requestEnvelope.request.intent.name === 'HelloWorldIntent';
    },
    handle(handlerInput) {
        const speechText = 'Hello World!';
        return handlerInput.responseBuilder
            .speak(speechText)
            //.reprompt('add a reprompt if you want to keep the session open for the user to respond')
            .getResponse();
    }
};
const HelpIntentHandler = {
    canHandle(handlerInput) {
        return handlerInput.requestEnvelope.request.type === 'IntentRequest'
            &amp;amp;&amp;amp; handlerInput.requestEnvelope.request.intent.name === 'AMAZON.HelpIntent';
    },
    handle(handlerInput) {
        const speechText = 'You can say hello to me! How can I help?';

        return handlerInput.responseBuilder
            .speak(speechText)
            .reprompt(speechText)
            .getResponse();
    }
};
const CancelAndStopIntentHandler = {
    canHandle(handlerInput) {
        return handlerInput.requestEnvelope.request.type === 'IntentRequest'
            &amp;amp;&amp;amp; (handlerInput.requestEnvelope.request.intent.name === 'AMAZON.CancelIntent'
                || handlerInput.requestEnvelope.request.intent.name === 'AMAZON.StopIntent');
    },
    handle(handlerInput) {
        const speechText = 'Goodbye!';
        return handlerInput.responseBuilder
            .speak(speechText)
            .getResponse();
    }
};
const SessionEndedRequestHandler = {
    canHandle(handlerInput) {
        return handlerInput.requestEnvelope.request.type === 'SessionEndedRequest';
    },
    handle(handlerInput) {
        // Any cleanup logic goes here.
        return handlerInput.responseBuilder.getResponse();
    }
};

const CanFulfillIntentRequestIntentHandler = {
    canHandle(handlerInput) {
        return handlerInput.requestEnvelope.request.type === 'IntentRequest'
            &amp;amp;&amp;amp; (handlerInput.requestEnvelope.request.intent.name === 'CAN_FULFILL_INTENT_REQUEST');
    },
    handle(handlerInput) {
        return controller.play(handlerInput);
    }
};


const AmazonPauseIntentHandler = {
    canHandle(handlerInput) {
        return handlerInput.requestEnvelope.request.type === 'IntentRequest'
            &amp;amp;&amp;amp; (handlerInput.requestEnvelope.request.intent.name === 'AMAZON.PauseIntent');
    },
    handle(handlerInput) {
        return controller.stop(handlerInput);
    }
};

// The intent reflector is used for interaction model testing and debugging.
// It will simply repeat the intent the user said. You can create custom handlers
// for your intents by defining them above, then also adding them to the request
// handler chain below.
const IntentReflectorHandler = {
    canHandle(handlerInput) {
        return handlerInput.requestEnvelope.request.type === 'IntentRequest';
    },
    handle(handlerInput) {
        const intentName = handlerInput.requestEnvelope.request.intent.name;
        const speechText = `You just triggered ${intentName}`;

        return handlerInput.responseBuilder
            .speak(speechText)
            //.reprompt('add a reprompt if you want to keep the session open for the user to respond')
            .getResponse();
    }
};

// Generic error handling to capture any syntax or routing errors. If you receive an error
// stating the request handler chain is not found, you have not implemented a handler for
// the intent being invoked or included it in the skill builder below.
const ErrorHandler = {
    canHandle() {
        return true;
    },
    handle(handlerInput, error) {
        console.log(`~~~~ Error handled: ${error.message}`);
        const speechText = `Sorry, I couldn't understand what you said. Please try again.`;

        return handlerInput.responseBuilder
            .speak(speechText)
            .reprompt(speechText)
            .getResponse();
    }
};

// This handler acts as the entry point for your skill, routing all request and response
// payloads to the handlers above. Make sure any new handlers or interceptors you've
// defined are included below. The order matters - they're processed top to bottom.
exports.handler = Alexa.SkillBuilders.custom()
    .addRequestHandlers(
        LaunchRequestHandler,
        HelloWorldIntentHandler,
        HelpIntentHandler,
        CancelAndStopIntentHandler,
        CanFulfillIntentRequestIntentHandler,
        AmazonPauseIntentHandler,
        SessionEndedRequestHandler,
        IntentReflectorHandler) // make sure IntentReflectorHandler is last so it doesn't override your custom intent handlers
    .addErrorHandlers(
        ErrorHandler)
    .lambda();

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At the end of the day, the recordings, the Alexa skill and one of the mobile echo dots helped my daughter feel closer to me although I was far far away. We still use the skill after we’ve read books and are tired, but the little one somehow has the energy of a thousand suns in her and refuses to go to sleep. She loves her daddy stories and my wife and I, it goes without saying, love her.&lt;/p&gt;</content><author><name>Christopher Ottley</name></author><category term="Alexa" /><summary type="html">Work (the kind I get paid for) carried me far and away from my family for 5 weeks recently. It was supposed to be maximum 3, but that’s another story. I was especially missing my wife and 3 year old baby girl during this time. The time zone difference (2 hours) was not that much, but had an impact when I had to work late. Sometimes I would miss bedtime and reading my baby girl stories to go to sleep, but more importantly, she would miss me.</summary></entry><entry><title type="html">Alexa, show me the browser</title><link href="https://cottley.github.io/Alexa-show-me-the-browser" rel="alternate" type="text/html" title="Alexa, show me the browser" /><published>2018-10-09T04:00:00-04:00</published><updated>2018-10-09T04:00:00-04:00</updated><id>https://cottley.github.io/Alexa-show-me-the-browser</id><content type="html" xml:base="https://cottley.github.io/Alexa-show-me-the-browser">&lt;p&gt;A while ago I bought a &lt;a href=&quot;https://www.amazon.com/gp/product/B01J94SCAM/ref=oh_aui_detailpage_o07_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;Kindle Fire 8 Kids edition&lt;/a&gt; for my daughter and of course it had Alexa bundled in. While the Kindle Freetime didn’t really work outside of the US at the time, it really is just an Android tablet with the Amazon app store loaded up.&lt;/p&gt;

&lt;p&gt;I managed to install Firefox on the tablet, as well as Chrome. While Alexa allows me to do neato home automation stuff, I was a bit disappointed that I couldn’t control the apps on the tablet using Alexa.&lt;/p&gt;

&lt;p&gt;So, the idea I have is to create a customized Firefox extension or Chrome extension that will allow me to control the browser remotely, say launch a specific website, or do hands free navigation while in the kitchen. This would of course have to be accompanied by a companion Alexa skill, which I guess I could call something like “Browser Voice Control” so as to not use anyone’s trademarked names.&lt;/p&gt;</content><author><name>Christopher Ottley</name></author><category term="Ideas" /><category term="Alexa" /><category term="Firefox" /><summary type="html">A while ago I bought a Kindle Fire 8 Kids edition for my daughter and of course it had Alexa bundled in. While the Kindle Freetime didn’t really work outside of the US at the time, it really is just an Android tablet with the Amazon app store loaded up.</summary></entry><entry><title type="html">Quindecim</title><link href="https://cottley.github.io/Quindecim" rel="alternate" type="text/html" title="Quindecim" /><published>2018-10-08T04:00:00-04:00</published><updated>2018-10-08T04:00:00-04:00</updated><id>https://cottley.github.io/Quindecim</id><content type="html" xml:base="https://cottley.github.io/Quindecim">&lt;p&gt;Quindecim. A game idea I have for my Alexa-powered smart speakers. It’s essentially a number matching and memory game with a maximum of fifteen numbers. The aim of the game is to descramble a scrambled list of numbers in as few moves as possible.&lt;/p&gt;

&lt;p&gt;You start out with a game of a certain length, for simplicity let’s say the game is four numbers long. There are two lists, your list and Alexa’s list, both of which have the same numbers in the same (let’s say ascending) order. At this point the game looks like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Alexa: 1, 2, 3, 4
You:   1, 2, 3, 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Alexa scrambles the positions of the numbers and keeps the scrambled list hidden from you. The new list looks like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Alexa: ?, ?, ?, ?
You:   1, 2, 3, 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With this list, Alexa would let you know how many numbers still line up (if any).&lt;/p&gt;

&lt;p&gt;Let’s say the scrambled Alexa list was:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Alexa: 4, 1, 3, 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you ask Alexa how many matching numbers you have, the reply would be none. You can then ask Alexa to swap two numbered positions, for example, to swap positions one and two. The new list would look like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Alexa: 1, 4, 3, 2
You:   1, 2, 3, 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now, when asked how many matching numbers you have, the reply would be one. You can then ask once more Alexa to swap two numbered positions, for example, to swap positions two and four. The new list would look like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Alexa: 1, 2, 3, 4
You:   1, 2, 3, 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You would have all four numbers matching and would have completed the game in two moves. In reality this would be a bit more difficult as we would not be able to know exactly which numbered positions are matching. Also, the game would get progressively more difficult the longer the lists.&lt;/p&gt;

&lt;p&gt;I might put in some hints, or the ability to ask once which positions are matching per game, maybe a leaderboard so you could know how you rank in a game this length (by number of moves, time to complete or even by time period: over the last 24 hours, last week, last month, last year, all time).&lt;/p&gt;</content><author><name>Christopher Ottley</name></author><category term="Ideas" /><category term="Alexa" /><summary type="html">Quindecim. A game idea I have for my Alexa-powered smart speakers. It’s essentially a number matching and memory game with a maximum of fifteen numbers. The aim of the game is to descramble a scrambled list of numbers in as few moves as possible.</summary></entry><entry><title type="html">So many frameworks, oh my!</title><link href="https://cottley.github.io/So-many-frameworks-oh-my" rel="alternate" type="text/html" title="So many frameworks, oh my!" /><published>2018-10-05T04:00:00-04:00</published><updated>2018-10-05T04:00:00-04:00</updated><id>https://cottley.github.io/So-many-frameworks-oh-my</id><content type="html" xml:base="https://cottley.github.io/So-many-frameworks-oh-my">&lt;p&gt;With all the Alexa work I have planned, I decided to create a project called Argyle, named from Tobago’s &lt;a href=&quot;https://www.destinationtnt.com/argyle-waterfall/&quot;&gt;largest waterfall&lt;/a&gt;. I had looked at &lt;a href=&quot;https://laravel.com/&quot;&gt;Laravel&lt;/a&gt; and &lt;a href=&quot;https://phalconphp.com/en/&quot;&gt;Phalcon&lt;/a&gt; but I got the white-screen-of-nothing and no packages to install respectively after trying to install these frameworks. So, I decided to take a step back and worry about the front end and whole framework thing later. Instead I would focus on creating a nice JSON based API that I can use for whatever front end (web, android app, alexa etc.) I decided to use.&lt;/p&gt;

&lt;p&gt;This led me to a nice slim php framework named, you guessed it, &lt;a href=&quot;https://www.slimframework.com/&quot;&gt;Slim&lt;/a&gt;! I had managed to install &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; while trying to get the other frameworks to work, so, following the instructions on the home page, I created argyle-api using the slim-skeleton.&lt;/p&gt;

&lt;pre&gt;
workstation@workstation-upstairs:/var/www/html$ composer create-project slim/slim-skeleton argyle-api

Installing slim/slim-skeleton (3.1.6)
  - Installing slim/slim-skeleton (3.1.6): Downloading (100%)
Created project in argyll-api
Loading composer repositories with package information
Updating dependencies (including require-dev)
Package operations: 35 installs, 0 updates, 0 removals
  - Installing psr/container (1.0.0): Loading from cache
  - Installing container-interop/container-interop (1.2.0): Downloading (100%)
  - Installing nikic/fast-route (v1.3.0): Downloading (100%)
  - Installing psr/http-message (1.0.1): Downloading (100%)
  - Installing pimple/pimple (v3.2.3): Downloading (100%)
  - Installing slim/slim (3.11.0): Downloading (100%)
  - Installing slim/php-view (2.2.0): Downloading (100%)
  - Installing psr/log (1.0.2): Loading from cache
  - Installing monolog/monolog (1.23.0): Loading from cache
  - Installing symfony/polyfill-ctype (v1.9.0): Loading from cache
  - Installing symfony/yaml (v4.1.6): Downloading (100%)
  - Installing sebastian/version (2.0.1): Loading from cache
  - Installing sebastian/resource-operations (1.0.0): Loading from cache
  - Installing sebastian/recursion-context (2.0.0): Downloading (100%)
  - Installing sebastian/object-enumerator (2.0.1): Downloading (100%)
  - Installing sebastian/global-state (1.1.1): Downloading (100%)
  - Installing sebastian/exporter (2.0.0): Downloading (100%)
  - Installing sebastian/environment (2.0.0): Downloading (100%)
  - Installing sebastian/diff (1.4.3): Downloading (100%)
  - Installing sebastian/comparator (1.2.4): Downloading (100%)
  - Installing doctrine/instantiator (1.1.0): Loading from cache
  - Installing phpunit/php-text-template (1.2.1): Loading from cache
  - Installing phpunit/phpunit-mock-objects (3.4.4): Downloading (100%)
  - Installing phpunit/php-timer (1.0.9): Downloading (100%)
  - Installing phpunit/php-file-iterator (1.4.5): Downloading (100%)
  - Installing sebastian/code-unit-reverse-lookup (1.0.1): Loading from cache
  - Installing phpunit/php-token-stream (2.0.2): Downloading (100%)
  - Installing phpunit/php-code-coverage (4.0.8): Downloading (100%)
  - Installing webmozart/assert (1.3.0): Loading from cache
  - Installing phpdocumentor/reflection-common (1.0.1): Loading from cache
  - Installing phpdocumentor/type-resolver (0.4.0): Loading from cache
  - Installing phpdocumentor/reflection-docblock (4.3.0): Loading from cache
  - Installing phpspec/prophecy (1.8.0): Loading from cache
  - Installing myclabs/deep-copy (1.8.1): Loading from cache
  - Installing phpunit/phpunit (5.7.27): Downloading (100%)
monolog/monolog suggests installing aws/aws-sdk-php (Allow sending log messages to AWS services like DynamoDB)
monolog/monolog suggests installing doctrine/couchdb (Allow sending log messages to a CouchDB server)
monolog/monolog suggests installing ext-amqp (Allow sending log messages to an AMQP server (1.0+ required))
monolog/monolog suggests installing ext-mongo (Allow sending log messages to a MongoDB server)
monolog/monolog suggests installing graylog2/gelf-php (Allow sending log messages to a GrayLog2 server)
monolog/monolog suggests installing mongodb/mongodb (Allow sending log messages to a MongoDB server via PHP Driver)
monolog/monolog suggests installing php-amqplib/php-amqplib (Allow sending log messages to an AMQP server using php-amqplib)
monolog/monolog suggests installing php-console/php-console (Allow sending log messages to Google Chrome)
monolog/monolog suggests installing rollbar/rollbar (Allow sending log messages to Rollbar)
monolog/monolog suggests installing ruflin/elastica (Allow sending log messages to an Elastic Search server)
monolog/monolog suggests installing sentry/sentry (Allow sending log messages to a Sentry server)
symfony/yaml suggests installing symfony/console (For validating YAML files using the lint command)
sebastian/global-state suggests installing ext-uopz (*)
phpunit/phpunit-mock-objects suggests installing ext-soap (*)
phpunit/php-code-coverage suggests installing ext-xdebug (^2.5.1)
phpunit/phpunit suggests installing phpunit/php-invoker (~1.1)
phpunit/phpunit suggests installing ext-xdebug (*)
Writing lock file
Generating autoload files
workstation@workstation-upstairs:/var/www/html$
&lt;/pre&gt;

&lt;p&gt;Nice! I refuse to use PHP’s webserver (as seen on the Slim Framework website) as I want to make sure that what I’m writing can work with Apache. A quick visit to the website and all seems well. I can see a slim page and a nice link to try the framework.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/20181005-fig1.png&quot; alt=&quot;Slim Framework Default Index Page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So it turns out that the project is created in argyle-api, but the actual web part is in the public folder. This is understandable as you don’t necessarily want all your files in the webserver directory, due to permissions etc. This makes for a horrible URL though, as I don’t want to have to type in the /public/ part to get to my API and web service. Luckily(?) I’m running Apache and there’s a conf file for that. Specifically I can create a conf file named argyle-api.conf with the contents below in /etc/apache2/conf-available:&lt;/p&gt;

&lt;pre&gt;
Alias /argyle-api /var/www/html/argyle-api/public

&amp;lt;Directory /var/www/html/argyle-api/public&amp;gt;
    Options FollowSymLinks
    DirectoryIndex index.php
&amp;lt;/Directory&amp;gt;
&lt;/pre&gt;

&lt;p&gt;What this conf file is telling apache is that when someone goes to the /argyle-api URL, serve them content from the /var/www/html/argyle-api/public folder (that’s the alias part). Then we want to make sure we set the directory options for the folder so we can control how it behaves (to follow any symbolic links in the folder and if no file is specified, serve up index.php).&lt;/p&gt;

&lt;p&gt;Putting the file in the /etc/apache2/conf-available folder does not automagically make it work. To get it working we need to enable it using a2enconf (a command meaning Apache 2 enable configuration).&lt;/p&gt;

&lt;pre&gt;
workstation@workstation-upstairs:/etc/apache2/conf-available$ sudo a2enconf argyle-api
Enabling conf argyle-api.
To activate the new configuration, you need to run:
  service apache2 reload
workstation@workstation-upstairs:/etc/apache2/conf-available$ sudo service apache2 reload
workstation@workstation-upstairs:/etc/apache2/conf-available$
&lt;/pre&gt;

&lt;p&gt;Great, now we can get to our public index.php page without using the /public/ URL.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/20181005-fig2.png&quot; alt=&quot;Slim Framework with alias URL&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If something went wrong we could always disable our configuration using a2disconf. Using this alias and conf technique we can store the whole project outside the apache www folder if we wanted to and still serve content (noting that the public folder must be at least readable by the apache user depending on what you are doing).&lt;/p&gt;

&lt;p&gt;So now that we have that working, lets try modifying the routes so we can do some custom stuff. I use a small hello world example from the &lt;a href=&quot;https://www.slimframework.com/&quot;&gt;Slim Framework Homepage&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;
$app-&amp;gt;get('/hello/{name}', function (Request $request, Response $response, array $args) {
    $name = $args['name'];
    $response-&amp;gt;getBody()-&amp;gt;write(&quot;Hello, $name&quot;);

    return $response;
});
&lt;/pre&gt;

&lt;p&gt;I find the routes.php file in the argyle-api/src folder and modify it to say hello with the name being an optional parameter.&lt;/p&gt;

&lt;pre&gt;
&amp;lt;?php

use Slim\Http\Request;
use Slim\Http\Response;

// Routes

$app-&amp;gt;get('/[{name}]', function (Request $request, Response $response, array $args) {
    // Sample log message
    $this-&amp;gt;logger-&amp;gt;info(&quot;Slim-Skeleton '/' route&quot;);

    // Render index view
    return $this-&amp;gt;renderer-&amp;gt;render($response, 'index.phtml', $args);
});

$app-&amp;gt;get('/hello/[{name}]', function (Request $request, Response $response, array $args) {
    $name = $args['name'];
    $response-&amp;gt;getBody()-&amp;gt;write(&quot;Hello, $name&quot;);

    return $response;
});
&lt;/pre&gt;

&lt;p&gt;One quick browse to my new argyle-api/hello/world URL and… 404. Hmmm.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/20181005-fig3.png&quot; alt=&quot;404&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Given that the paths are essentially rewritten aliases going through index.php to generate the responses, to get this to work with apache, we would need mod_rewrite enabled, otherwise the URLs would be expected to be existing directories. We can enable mod_rewrite using a2enmod.&lt;/p&gt;

&lt;pre&gt;
workstation@workstation-upstairs:~$ sudo a2enmod rewrite
Enabling module rewrite.
To activate the new configuration, you need to run:
  service apache2 restart
workstation@workstation-upstairs:~$ sudo service apache2 restart
workstation@workstation-upstairs:~$
&lt;/pre&gt;

&lt;p&gt;A quick &lt;a href=&quot;http://php.net/manual/en/function.phpinfo.php&quot;&gt;phpinfo()&lt;/a&gt; check later and we can confirm that mod_rewrite is enabled.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/20181005-fig4.png&quot; alt=&quot;Found mod_rewite&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We try the hello world url again and… Internal server error. &lt;em&gt;sigh&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/20181005-fig5.png&quot; alt=&quot;Internal server error&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ok, well at least mod_rewite is working (if it wasn’t, we would probably need to add &lt;strong&gt;AllowOverride All&lt;/strong&gt; to the argyle-api.conf right before &lt;strong&gt;Options FollowSymLinks&lt;/strong&gt; so the .htaccess would be processed). Anyway, let’s have a look at what’s in the .htaccess for the public folder as part of this skeleton app.&lt;/p&gt;

&lt;pre&gt;
&lt;IfModule mod_rewrite.c=&quot;&quot;&gt;
  RewriteEngine On

  # Some hosts may require you to use the `RewriteBase` directive.
  # Determine the RewriteBase automatically and set it as environment variable.
  # If you are using Apache aliases to do mass virtual hosting or installed the
  # project in a subdirectory, the base path will be prepended to allow proper
  # resolution of the index.php file and to redirect to the correct URI. It will
  # work in environments without path prefix as well, providing a safe, one-size
  # fits all solution. But as you do not need it in this case, you can comment
  # the following 2 lines to eliminate the overhead.
  RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\2$
  RewriteRule ^(.*) - [E=BASE:%1]

  # If the above doesn't work you might need to set the `RewriteBase` directive manually, it should be the
  # absolute physical path to the directory that contains this htaccess file.
  # RewriteBase /

  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteRule ^ index.php [QSA,L]
&lt;/IfModule&gt;
&lt;/pre&gt;

&lt;p&gt;Looks like they were trying to do something fancy .htaccess stuff when installed in a subdirectory or using an alias (both of which I am doing), but it clearly isn’t working for my environment. Let’s simplify and try again.&lt;/p&gt;

&lt;pre&gt;
RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^ index.php [QSA,L]
&lt;/pre&gt;

&lt;p&gt;Still internal server error. Looks like we may need to set that RewriteBase directive manually. The comment from the previous version of the .htaccess from the skeleton project says to set it to the absolute physical path to the directory, but it makes more sense to me to set it to the root relative directory for the alias.&lt;/p&gt;

&lt;pre&gt;
RewriteEngine On
RewriteBase /argyle-api/
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^ index.php [QSA,L]
&lt;/pre&gt;

&lt;p&gt;And there we go, hello world!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/20181005-fig6.png&quot; alt=&quot;Hello world&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this post I have covered:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;How to setup the Slim Framework and create a project from the skeleton code&lt;/li&gt;
  &lt;li&gt;Get the Slim Framework to work using an Apache alias&lt;/li&gt;
  &lt;li&gt;Check that mod_rewite is enabled (and enable it if it isn’t)&lt;/li&gt;
  &lt;li&gt;Get additional routes to work by modifying the .htaccess to include the RewriteBase directive&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s quite a bit for one post so I think I’ll cover the creation of the JSON API in a subsequent posting. Thanks for reading, see you next time!&lt;/p&gt;</content><author><name>Christopher Ottley</name></author><category term="Stuff" /><category term="Alexa" /><summary type="html">With all the Alexa work I have planned, I decided to create a project called Argyle, named from Tobago’s largest waterfall. I had looked at Laravel and Phalcon but I got the white-screen-of-nothing and no packages to install respectively after trying to install these frameworks. So, I decided to take a step back and worry about the front end and whole framework thing later. Instead I would focus on creating a nice JSON based API that I can use for whatever front end (web, android app, alexa etc.) I decided to use.</summary></entry><entry><title type="html">Oh, Oracle session, let me know</title><link href="https://cottley.github.io/oh-oracle-session-let-me-know" rel="alternate" type="text/html" title="Oh, Oracle session, let me know" /><published>2018-10-02T04:00:00-04:00</published><updated>2018-10-02T04:00:00-04:00</updated><id>https://cottley.github.io/oh-oracle-session-let-me-know</id><content type="html" xml:base="https://cottley.github.io/oh-oracle-session-let-me-know">&lt;p&gt;Oracle. Love it or hate it, it’s all over the place and the basis of many enterprise solutions. While there may be commerical system monitoring and analysis solutions, sometimes (due to cost, speed or simplicity) you just need a quick and dirty solution to make sure you know what’s going on in your database. In this post I am going to discuss how to use a script that I’ve written that lets you monitor the session metric in Oracle’s v$sysmetric view and sends an email if the session metric is over some prescribed limit.&lt;/p&gt;

&lt;p&gt;For this to work we need a few things:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Root access to the database server to setup the cron job (well we could set it up using another account, like the oracle server account, but who wants to try to find random crontabs all over the place in a few years when we inevitably forget about this?)&lt;/li&gt;
  &lt;li&gt;Local database system access to get access to the v$sysmetric database view&lt;/li&gt;
  &lt;li&gt;Access to the sqlplus command at a bash prompt&lt;/li&gt;
  &lt;li&gt;The mail client &lt;a href=&quot;https://linux.die.net/man/1/mailx&quot;&gt;mailx&lt;/a&gt; installed and accessible at a command prompt&lt;/li&gt;
  &lt;li&gt;An open SMTP server (ok this is not necessary as mailx supports lots of secure mail services, but I’m assuming you have some internal accessible only SMTP server available)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;First, let us download the &lt;a href=&quot;https://raw.githubusercontent.com/cottley/script_stuff/master/check_oracle_session/check_oracle_session.sh&quot;&gt;check_oracle_session.sh script&lt;/a&gt; from my github script_stuff repository.&lt;/p&gt;

&lt;p&gt;In my test environment I have a user, oracle with a home folder in /home/oracle/.&lt;/p&gt;

&lt;p&gt;Next we place the downloaded check_oracle_session.sh script in the /home/oracle/ folder and make it executable for the oracle user. We can make it executable (and leave it read-only) for everyone by executing:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chmod 555 check_oracle_session.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If all is setup properly you can run the script and see the script options by executing:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./check_oracle_session.sh -h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Below are the options that the script accepts to execute.&lt;/p&gt;

&lt;pre&gt;
NAME:
  check_oracle_session.sh - Automatic Oracle Database Instance Session Checker v1.0

SYNOPSIS:
  check_oracle_session.sh [options]
  Run automated check for the number of sessions for a oracle database instance.
  The script will execute a notification once the number of sessions exceeds
  a specified limit.

OPTIONS:
  -h, --help
    Show this message
  -l, --limit integerlimit
    Specify the session limit you would like to use so that notifications go
    out when the number of sessions meet or exceed this number. E.g. -l 100
  -s, --smtpserver smtpserver
    Specify the smtp server to use when sending notifications
    E.g. -s mail.mycompany.com
  -f, --from fromemailaddress
    Specify the email address the email will appear to come from when there
    are notifications as a result of the limit being met or exceeded
    E.g. -f noreply@mycompany.com
  -t, --to toemailaddress
    Specify the email address to email when limit has been met or exeeded
    E.g. -t me@mycompany.com
  -v, --verbose
    Verbose output. Note: This will send an email even if the limit has not
    been met or exceeded
&lt;/pre&gt;

&lt;p&gt;An example invocation that is checking if the session limit has met or exceeded 50 sessions, using the SMTP server mail.mycompany.com, with the email coming from noreply@mycompany.com and the email being sent to me@mycompany.com:&lt;/p&gt;
&lt;pre&gt;
./check_oracle_session.sh -l 50 -s mail.mycompany.com -f noreply@mycompany.com -t me@mycompany.com
&lt;/pre&gt;

&lt;p&gt;This script assumes that the oracle environment has been setup so that you can use sqlplus at a command prompt and connect as the system DBA.&lt;/p&gt;

&lt;p&gt;In my environment, I also have a seperate oracle.bash file that I source to set the ORACLE_SID, the TNS_ADMIN home etc. You may or may not have a similar configuration, however whatever steps you need to get sqlplus working at a command prompt, that’s what you need to do to test sqlplus.&lt;/p&gt;

&lt;pre&gt;
[oracle@mydatabase ~]$ sqlplus / as sysdba

SQL*Plus: Release 12.1.0.2.0 Production on Tue Oct 2 10:52:36 2018

Copyright (c) 1982, 2014, Oracle.  All rights reserved.


Connected to:
Oracle Database 12c Enterprise Edition Release 12.1.0.2.0 - 64bit Production
With the Partitioning, OLAP, Advanced Analytics and Real Application Testing options

SQL&amp;gt;
&lt;/pre&gt;

&lt;p&gt;We can easily test our script to ensure the notifications work by asking it to send an email with a low limit, like 0.&lt;/p&gt;

&lt;pre&gt;
./check_oracle_session.sh -l 0 -s mail.mycompany.com -f noreply@mycompany.com -t me@mycompany.com
&lt;/pre&gt;

&lt;p&gt;Once that works, we can now schedule the script to run every 5 minutes via cron.&lt;/p&gt;

&lt;p&gt;In the crontab we change to the oracle user (su - oracle) and execute the command (-c) in double quotes.&lt;/p&gt;

&lt;p&gt;In my test environment I source the oracle.bash to set the environment variables and then run the script with the parameters tested earlier.&lt;/p&gt;

&lt;pre&gt;
*/5 * * * * su - oracle -c &quot;source /home/oracle/oracle.bash &amp;gt; /dev/null &amp;amp;&amp;amp; /home/oracle/check_oracle_session.sh -l 50 -s mail.mycompany.com -f noreply@mycompany.com -t me@mycompany.com&quot;
&lt;/pre&gt;

&lt;p&gt;If your oracle user has the environment variables set already and you don’t need to source any configuration scripts you can use the below crontab entry instead.&lt;/p&gt;

&lt;pre&gt;
*/5 * * * * su - oracle -c &quot;/home/oracle/check_oracle_session.sh -l 50 -s mail.mycompany.com -f noreply@mycompany.com -t me@mycompany.com&quot;
&lt;/pre&gt;

&lt;p&gt;Once complete you should get confirmation that the crontab has been saved and installed.&lt;/p&gt;

&lt;pre&gt;
[root@mydatabase ~]# crontab -e
no crontab for root - using an empty one
crontab: installing new crontab
[root@mydatabase ~]#
&lt;/pre&gt;

&lt;p&gt;And Voila! The script will run every 5 minutes and notify you via email if the session limit has been exceeded.&lt;/p&gt;

&lt;p&gt;You can also track the individual runs of the script by looking at the /var/log/check_oracle_session.log.&lt;/p&gt;

&lt;pre&gt;
[root@mydatabase ~]# tail -f /var/log/check_oracle_session.log
2018-10-02T12:05:01-0500 Limit is: 50 and No. Of Sessions is: 48
2018-10-02T12:10:01-0500 Limit is: 50 and No. Of Sessions is: 50
2018-10-02T12:15:01-0500 Limit is: 50 and No. Of Sessions is: 50
2018-10-02T12:20:01-0500 Limit is: 50 and No. Of Sessions is: 49
2018-10-02T12:25:01-0500 Limit is: 50 and No. Of Sessions is: 48
2018-10-02T12:30:01-0500 Limit is: 50 and No. Of Sessions is: 48
2018-10-02T12:35:01-0500 Limit is: 50 and No. Of Sessions is: 48
2018-10-02T12:40:02-0500 Limit is: 50 and No. Of Sessions is: 48
2018-10-02T12:45:01-0500 Limit is: 50 and No. Of Sessions is: 48
2018-10-02T12:50:01-0500 Limit is: 50 and No. Of Sessions is: 48
&lt;/pre&gt;

&lt;p&gt;You can now extend this script if desired and make modifications to monitor multiple metrics, possibly add logic to check the average value of the metric (using v$sysmetric_summary) and only give an alert if the new value for the metric is, say, 10% over the average instead of a hard coded value. You can also add more notification options, such as notifications to a slack channel or even a text message when you are out of wireless (but not cell network) range depending on the API interfaces you have available.&lt;/p&gt;</content><author><name>Christopher Ottley</name></author><category term="Stuff" /><category term="Howto" /><category term="Scripts" /><category term="Oracle" /><category term="Bash" /><summary type="html">Oracle. Love it or hate it, it’s all over the place and the basis of many enterprise solutions. While there may be commerical system monitoring and analysis solutions, sometimes (due to cost, speed or simplicity) you just need a quick and dirty solution to make sure you know what’s going on in your database. In this post I am going to discuss how to use a script that I’ve written that lets you monitor the session metric in Oracle’s v$sysmetric view and sends an email if the session metric is over some prescribed limit.</summary></entry><entry><title type="html">Sometimes I forget</title><link href="https://cottley.github.io/sometimes-i-forget" rel="alternate" type="text/html" title="Sometimes I forget" /><published>2018-09-30T04:00:00-04:00</published><updated>2018-09-30T04:00:00-04:00</updated><id>https://cottley.github.io/sometimes-i-forget</id><content type="html" xml:base="https://cottley.github.io/sometimes-i-forget">&lt;p&gt;The nice thing about having lots of smart plugs and bulbs connected to Alexa is the convenience of yelling at your devices to turn on and off. While you can schedule devices to turn on and off at specific times, I have to admit that from time to time I get caught up in doing something else and forget the device on. This happens especially with rooms that I don’t frequent every day, like the storage room in the back of the house or where the washer and dryer are. In general I might be in one of those places for maybe 10 minutes so if I forget to turn off the lights (which can happen because there is a door right behind there and I habitually close it) it would be good if something turned the lights off for me, say, after 20 minutes. It might be usefull for the garage as well as after those lights are turned on and we move what we need to from the car into the house, the garage lights might stay on by accident as well.&lt;/p&gt;

&lt;p&gt;As nice as that would be, it can also get a bit evil. In the bathroom for more than 30 minutes? Light turns off. Showering for more than 10 minutes? Water turns off. Watching TV for more than an hour? TV turns off.&lt;/p&gt;

&lt;p&gt;Using the same &lt;a href=&quot;https://github.com/konsumer/tplink-lightbulb&quot;&gt;command line application&lt;/a&gt; from my previous half-baked idea post on &lt;a href=&quot;/read-my-mind-alexa&quot;&gt;alex reading my mind&lt;/a&gt; I should be able to hack together something that would work with cron and track when certain devices have been turned on and turn them off after a specified period of time if they are still on.&lt;/p&gt;</content><author><name>Christopher Ottley</name></author><category term="Ideas" /><category term="Alexa" /><summary type="html">The nice thing about having lots of smart plugs and bulbs connected to Alexa is the convenience of yelling at your devices to turn on and off. While you can schedule devices to turn on and off at specific times, I have to admit that from time to time I get caught up in doing something else and forget the device on. This happens especially with rooms that I don’t frequent every day, like the storage room in the back of the house or where the washer and dryer are. In general I might be in one of those places for maybe 10 minutes so if I forget to turn off the lights (which can happen because there is a door right behind there and I habitually close it) it would be good if something turned the lights off for me, say, after 20 minutes. It might be usefull for the garage as well as after those lights are turned on and we move what we need to from the car into the house, the garage lights might stay on by accident as well.</summary></entry><entry><title type="html">Can you carry me back?</title><link href="https://cottley.github.io/can-you-carry-me-back" rel="alternate" type="text/html" title="Can you carry me back?" /><published>2018-09-29T04:00:00-04:00</published><updated>2018-09-29T04:00:00-04:00</updated><id>https://cottley.github.io/can-you-carry-me-back</id><content type="html" xml:base="https://cottley.github.io/can-you-carry-me-back">&lt;p&gt;There are certain apps I use every day, and, not surprisingly, most of them are from google. While google has its google maps and navigation software, from my experience &lt;a href=&quot;https://www.waze.com/&quot;&gt;Waze&lt;/a&gt; is the better app and service. As much as I like Waze, I have a small peve about how it works, more specifically, how the favorites feature of it works. Waze can figure out where you live and work based on how many times you keep going and returning to those places and it does a pretty good job when you are looking for companies or businesses by name or even addresses.&lt;/p&gt;

&lt;p&gt;What about all the other places that you might visit regularly (or semi-regularly)? How about locations of your co-workers in case you need to pick them up for some event? What about favorite activities for the kid(s)? Prefered hospitals, doctor’s offices? Favorite restaurants? If you have clients, client offices? What about your friend’s houses? Or family?&lt;/p&gt;

&lt;p&gt;It would be great if there was an app that lets you store your geographic favorites in categories for easy access and then launch Waze in context to navigate to those locations. This way, pretty much anywhere I’m going, once I’ve at least been there before, or have the latitude and longitude of the location, I can have Waze find the fastest route.&lt;/p&gt;

&lt;p&gt;Investigating APIs it seems that Waze has a &lt;a href=&quot;https://www.waze.com/sdk&quot;&gt;SDK&lt;/a&gt;, but that seems overkill for what we would like to do. Google has a couple more &lt;a href=&quot;https://developers.google.com/waze/&quot;&gt;developer tools&lt;/a&gt; available for Waze but one of them, the &lt;a href=&quot;https://developers.google.com/waze/deeplinks/&quot;&gt;Waze deep links&lt;/a&gt; looks like just the ticket.&lt;/p&gt;

&lt;p&gt;So, now it’s to pick an app development platform. I’ve been looking at &lt;a href=&quot;https://unity3d.com&quot;&gt;Unity&lt;/a&gt; and using their &lt;a href=&quot;https://unity3d.com/learn/tutorials/topics/cloud-build/introduction-unity-cloud-build&quot;&gt;cloud build&lt;/a&gt; for some RAD. This might be a nice simple enough app to cut my teeth on.&lt;/p&gt;

&lt;p&gt;Finally, while I have been playing with &lt;a href=&quot;https://aws.amazon.com/dynamodb/&quot;&gt;Amazon’s dynamodb&lt;/a&gt; for some Alexa based apps, I’d like to see how &lt;a href=&quot;https://firebase.google.com/&quot;&gt;firebase&lt;/a&gt; works with Unity. I doubt I’ll hit past their free tier for this project, even if I complete it and put it out on the google app store.&lt;/p&gt;</content><author><name>Christopher Ottley</name></author><category term="Ideas" /><category term="Android" /><category term="Waze" /><summary type="html">There are certain apps I use every day, and, not surprisingly, most of them are from google. While google has its google maps and navigation software, from my experience Waze is the better app and service. As much as I like Waze, I have a small peve about how it works, more specifically, how the favorites feature of it works. Waze can figure out where you live and work based on how many times you keep going and returning to those places and it does a pretty good job when you are looking for companies or businesses by name or even addresses.</summary></entry><entry><title type="html">Alexa and Youtube music videos</title><link href="https://cottley.github.io/alexa-youtube-music-videos" rel="alternate" type="text/html" title="Alexa and Youtube music videos" /><published>2018-09-28T04:00:00-04:00</published><updated>2018-09-28T04:00:00-04:00</updated><id>https://cottley.github.io/alexa-youtube-music-videos</id><content type="html" xml:base="https://cottley.github.io/alexa-youtube-music-videos">&lt;p&gt;One day, maybe, far into the future, tech giants would work together to provide the best set of services for everyone. Or maybe we’ll have to hack together that future ourselves. Between &lt;a href=&quot;https://www.scmp.com/news/world/article/2123052/clash-tech-titans-google-bans-youtube-amazon-devices-escalating-dispute&quot;&gt;Google banning Youtube from some Amazon devices&lt;/a&gt; and &lt;a href=&quot;https://www.androidpolice.com/2018/03/02/amazon-still-isnt-selling-chromecast-nearly-three-months-initial-announcement/&quot;&gt;Amazon banning Chromecast&lt;/a&gt; from its store-of-everything (which should now be renamed store-of-everything-except-chromecast) there is probably no way anyone is going to provide a nice music service app for Alexa which has a playlist of popular youtube music from trending music videos.&lt;/p&gt;

&lt;p&gt;I’m 99% sure this is against Youtube’s terms of service, but it would be an interesting workflow to try to implement. We would need to:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Get a list of the &lt;a href=&quot;https://www.youtube.com/feed/trending&quot;&gt;trending videos&lt;/a&gt; on Youtube parsed into some sort of feed that would give titles and URLs&lt;/li&gt;
  &lt;li&gt;Filter the videos to search for anything that has the words “Official Video”, “Official Music” or “Music Video” somewhere in the title&lt;/li&gt;
  &lt;li&gt;Get the URLs for that filter and check it against a database of videos already processed so we don’t reprocess any old ones&lt;/li&gt;
  &lt;li&gt;Grab the video (and extract audio?) using something like &lt;a href=&quot;http://rg3.github.io/youtube-dl/&quot;&gt;youtube-dl&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Convert / extract audio to be playable via Alexa via &lt;a href=&quot;https://developer.amazon.com/docs/custom-skills/speech-synthesis-markup-language-ssml-reference.html#h3_converting_mp3&quot;&gt;ffmpeg&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Store the extracted audio somewhere where we have an Internet facing https server
    &lt;ol&gt;
      &lt;li&gt;Do not use S3, don’t want any account bans&lt;/li&gt;
      &lt;li&gt;A little linux server (maybe rpi based) that has apache and some storage should do the trick&lt;/li&gt;
      &lt;li&gt;A nice &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Letsencrypt&lt;/a&gt; certificate with a dynamic dns hostname would be needed as well&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Write a script that dynamically selects from the extracted audio files (maybe served from the audio server, maybe not)&lt;/li&gt;
  &lt;li&gt;Implement a skill with the &lt;a href=&quot;https://developer.amazon.com/docs/custom-skills/audioplayer-interface-reference.html&quot;&gt;audioplayer interface&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finally, yell at Alexa to ask youtube to play trending music and we should actually get some music piping back at us. We could even go further and implement some functionality to ask youtube what’s playing and it would recite the title of the video back at us.&lt;/p&gt;</content><author><name>Christopher Ottley</name></author><category term="Ideas" /><category term="Alexa" /><summary type="html">One day, maybe, far into the future, tech giants would work together to provide the best set of services for everyone. Or maybe we’ll have to hack together that future ourselves. Between Google banning Youtube from some Amazon devices and Amazon banning Chromecast from its store-of-everything (which should now be renamed store-of-everything-except-chromecast) there is probably no way anyone is going to provide a nice music service app for Alexa which has a playlist of popular youtube music from trending music videos.</summary></entry><entry><title type="html">Something Something Food</title><link href="https://cottley.github.io/something-something-food" rel="alternate" type="text/html" title="Something Something Food" /><published>2018-09-27T05:00:00-04:00</published><updated>2018-09-27T05:00:00-04:00</updated><id>https://cottley.github.io/something-something-food</id><content type="html" xml:base="https://cottley.github.io/something-something-food">&lt;p&gt;Food. When you’re hungry, there’s nothing like it, but when you’re not you want to save it for later. Given how many people in the world don’t know where their next meal is coming from, I consider myself immeasurably lucky to state that I’ve never worried about that. Ok, when I get wifey upset about something enough it can get a bit dicey, but generally food is there and not something to be wasted. As a general rule we like to keep food in the fridge or freezer but sometimes (more than I’d like) food gets pushed to the back of the fridge in some forgotten about container and is only discovered after some deep rummaging around. Unfortunately with all the other things people are busy with these days, keeping track of the food in the fridge, when the food was put in, what should be eaten first and how much of it is left is difficult.&lt;/p&gt;

&lt;p&gt;So, how about an Alexa skill which reduces/eliminates food wastage. Essentially an online, voice interface to inventory management for food in the fridge. We could even extend it to the freezer, add multiple fridges/freezers and even set re-order levels for certain items. We could know what’s in the fridge without having to open the door, saving electricity as the temperature would not raise with the door being kept open while we rummage around, unsure as to what we want to get out of it.&lt;/p&gt;</content><author><name>Christopher Ottley</name></author><category term="Ideas" /><category term="Alexa" /><summary type="html">Food. When you’re hungry, there’s nothing like it, but when you’re not you want to save it for later. Given how many people in the world don’t know where their next meal is coming from, I consider myself immeasurably lucky to state that I’ve never worried about that. Ok, when I get wifey upset about something enough it can get a bit dicey, but generally food is there and not something to be wasted. As a general rule we like to keep food in the fridge or freezer but sometimes (more than I’d like) food gets pushed to the back of the fridge in some forgotten about container and is only discovered after some deep rummaging around. Unfortunately with all the other things people are busy with these days, keeping track of the food in the fridge, when the food was put in, what should be eaten first and how much of it is left is difficult.</summary></entry><entry><title type="html">Read my mind Alexa</title><link href="https://cottley.github.io/read-my-mind-alexa" rel="alternate" type="text/html" title="Read my mind Alexa" /><published>2018-09-27T04:00:00-04:00</published><updated>2018-09-27T04:00:00-04:00</updated><id>https://cottley.github.io/read-my-mind-alexa</id><content type="html" xml:base="https://cottley.github.io/read-my-mind-alexa">&lt;p&gt;I’ve tricked out the house with Alexa compatible gadgets, a bunch of plugs, a whole set of bulbs and three echo dots in three different rooms. I was watching &lt;a href=&quot;https://en.wikipedia.org/wiki/The_First_(TV_series)&quot;&gt;The First&lt;/a&gt; and there are lots of sci-fi type things in the show, which is primarily actually a drama with sci-fi things occassionally going wrong. So they have the standard sci-fi-ish stuff with one of the main characters living in a smart house and another one in a smarter house. Typical future expectation like you walk into a room and lights come on and fireplace starts etc. I saw one of the characters ask for the TV to turn on by saying “screen on” or something similar into the ether and the TV screen turned on with the channel showing what he wanted to see. That got me thinking, I’m pretty sure I should be able to do that with Alexa and &lt;a href=&quot;https://www.digitaltrends.com/home/what-is-amazon-alexa-routines/&quot;&gt;Routines&lt;/a&gt; and the only real difference is that I would have to say the wakeword, Alexa, first.&lt;/p&gt;

&lt;p&gt;So I tried it and it works well enough as I have the TV plugged into a smart plug and the TV is an older LED one that returns to its on/off state whenever power is turned off and back on. As long as I don’t use the remote to turn off the TV, it works. Here is where it starts to get complicated, I have, &lt;em&gt;gasp&lt;/em&gt; two TVs. There’s one in the living room and one in the bedroom (which also is on a smart plug and has an echo dot nearby). If I want my new fancy routine to work with the TV in the living toom and the TV in the bedroom I’d need to say &lt;em&gt;which&lt;/em&gt; screen. I’d need to say “living screen on” or “bedroom screen on” and while that would work, it’s not as nice as it should be.&lt;/p&gt;

&lt;p&gt;I want to be able to say “screen on” near the echo dot in the living room and it turns on the living room TV and say “screen on” near the echo dot in the bedroom and it turns on the bedroom TV. The problem with this is that Alexa doesn’t care where it hears the command, it executes without additional context. Now that I’ve discussed the problem, here’s my idea for a solution.&lt;/p&gt;

&lt;p&gt;It seems that the Alexa API now lets you request additional location information for your skill, inclusive of a &lt;a href=&quot;https://developer.amazon.com/docs/custom-skills/device-address-api.html#get-the-api-access-token-and-device-id&quot;&gt;Device ID&lt;/a&gt;. To get the routine to work though, I would need to create a proxy &lt;a href=&quot;https://developer.amazon.com/docs/smarthome/understand-the-smart-home-skill-api.html&quot;&gt;smart home skill&lt;/a&gt; that would hopefully have the device id in the request JSON somewhere. Once I can get that, I’d need to find the devices associated with the device id, which I would have to setup externally and then change the devices to suit. Seeing as there is no API for me to automate Alexa itself (why Amazon, whyyyyy?), it looks like I’ll have to figure out the API to control the devices outside of the Alexa ecosystem.&lt;/p&gt;

&lt;p&gt;It turns out I was a bit lucky and bought a set of TP Link based bulbs and plugs and it turns out that someone already has a &lt;a href=&quot;https://github.com/konsumer/tplink-lightbulb&quot;&gt;command line app&lt;/a&gt; (nodejs based) that I should be able to use to turn my bulbs and plugs on and off. It looks like I should only need to learn one API and command line the rest of it based on the plug and bulb ids.&lt;/p&gt;

&lt;p&gt;Thinking about it a bit more, I shouldn’t even have to say “Alexa, screen on”, I should just have to say “Alexa, screen” and the skill will know the state of the plug. If it’s on it turns it off and if it’s off it turns it on. This should be able to extend to lights as well, “Alexa, lights” should be able to toggle the lights near the device on and off.&lt;/p&gt;

&lt;p&gt;Let’s see if I can get any traction on this when I get my time machine working. :).&lt;/p&gt;</content><author><name>Christopher Ottley</name></author><category term="Ideas" /><category term="Alexa" /><summary type="html">I’ve tricked out the house with Alexa compatible gadgets, a bunch of plugs, a whole set of bulbs and three echo dots in three different rooms. I was watching The First and there are lots of sci-fi type things in the show, which is primarily actually a drama with sci-fi things occassionally going wrong. So they have the standard sci-fi-ish stuff with one of the main characters living in a smart house and another one in a smarter house. Typical future expectation like you walk into a room and lights come on and fireplace starts etc. I saw one of the characters ask for the TV to turn on by saying “screen on” or something similar into the ether and the TV screen turned on with the channel showing what he wanted to see. That got me thinking, I’m pretty sure I should be able to do that with Alexa and Routines and the only real difference is that I would have to say the wakeword, Alexa, first.</summary></entry></feed>